#!/bin/bash

command=""
interval=""
number=""

########################################
#######  parsing args first  ###########
########################################

  while [ $# -gt 0 ];do
      arg1=$1
      case $arg1 in 
        -i)
	    interval=$2
            shift 2
            ;;
        -n)
	    number=$2
            shift 2
	    ;;
         *)
            command="$command $1"
            shift
	    ;;
      esac


  done


############################################################################################
######### checking input vars from environment variables or input command  #################
############################################################################################


###########   checking interval value ##########

if [ -z $interval ] && [ -z "$TRY_INTERVAL" ] ;then
     interval="5"
elif [ -z $interval ] && [ ! -z "$TRY_INTERVAL" ]; then
     interval=$TRY_INTERVAL
fi


###########   check number ##########

if [ -z $number ] && [ -z "$TRY_NUMBER" ] ;then
     number="12"
elif [ -z $number ] && [ ! -z "$TRY_NUMBER" ]; then
     number=$TRY_NUMBER
fi

###########   checking input command ##########
if [ -z "$command" ] && [ -z "$TRY_COMMAND" ] ;then
	echo "Input Command not recognized" >&2
	exit 1
elif [ -z "$command" ] && [ ! -z "$TRY_COMMAND" ]; then
	command=$TRY_COMMAND
fi

###################################################
######## checking if command is installed #########
###################################################

which $(echo $command | awk '{print $1}') > /dev/null 2>&1
if [ $? -eq 0 ];then
	$command 2> /dev/null
	if [ $? -eq 0 ];then
		exit 0
	else
		for (( i=1; i<$number; i++ ))
		do
			sleep $interval
			$command 2> /dev/null
		        if [ $? -eq 0 ];then
                		exit 0
			fi
		done
		echo "$command not successfully run !!!" >&2
		exit 1
	fi

else
	echo "command $(echo $command | awk '{print $1}') is  Not installed" >&2;
	exit 1
fi


